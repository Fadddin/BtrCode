version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - USER_SERVICE_URL=http://user-service:3001
      - CONTEST_SERVICE_URL=http://contest-service:3002
      - PROBLEM_SERVICE_URL=http://problem-service:3003
      - EXECUTION_SERVICE_URL=http://execution-service:3004
      - WEBSOCKET_SERVICE_URL=ws://websocket-service:8081
    networks:
      - coding-contest-network
    depends_on:
      - user-service
      - contest-service
      - problem-service
      - execution-service
      - websocket-service

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - coding-contest-network

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"  # RabbitMQ AMQP port for communication
      - "15672:15672"  # RabbitMQ management UI port
    networks:
      - coding-contest-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGO_URI=mongodb+srv://fardinKhan:AyR90RgJ2MOwqZzQ@cluster0.qmu47yh.mongodb.net/btrCode
    networks:
      - coding-contest-network

  contest-service:
    build: ./contest-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
    networks:
      - coding-contest-network

  problem-service:
    build: ./problem-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - coding-contest-network
    depends_on:
      - rabbitmq
    restart: always

  execution-service:
    build: ./execution-service
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
    networks:
      - coding-contest-network
    depends_on:
      - rabbitmq
      - redis

  websocket-service:
    build: ./websocket-service
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - REDIS_URL=redis://redis:6379
    networks:
      - coding-contest-network
    depends_on:
      - redis

networks:
  coding-contest-network:
    driver: bridge
